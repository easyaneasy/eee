.flex-container {
    display: flex;
    background-color: lightblue;
    height: 500px;
    width: 100vw;
    padding-top: 10px;
    /* gap은 플렉스 컨테이너 안에 설정 */
    /* 플렉스 아이템 간의 간격 조절 */
    gap: 10px;
}

/* flex-direction :  */
.d-row {
    /* 행, 정방향 / 기본값 */
    flex-direction: row;
}
.d-row-reverse {
    /* 행, 역방향 : 오른쪽 -> 왼쪽 */
    flex-direction: row-reverse;
}
.d-col {
    /* 열, 정방향 */
    flex-direction: column;
}
.d-col-reverse {
    /* 열, 역방향 */
    flex-direction: column-reverse;
}

/* 플렉스 아이템들의 배치(정렬) 방식 */
/* justify-content 속성 */
/* 주 축을 기준으로 한 배치 방식 */
.flex-start {
    /* 기본값 */
    justify-content: flex-start;
}
.flex-end {
    justify-content: flex-end;
}
.center {
    justify-content: center;
}
.space-between {
    justify-content: space-between;
}
/* 아래 두개는 유사함 */
.space-around {
    justify-content: space-around;
}
.space-evenly {
    justify-content: space-evenly;
}

/* 교차축 배치(정렬) 방식 */
.align-center {
    align-items: center;
}

/* 아이템 줄바꿈 여부 */
.flex-nowrap {
    /* 너비(높이)보다 내부 아이템의 너비(높이) 합이 크면
    내부 아이템의 너비(높이)를 줄여서 한줄에 배치 */
    flex-wrap: nowrap;
}
.flex-wrap {
    /* 너비(높이)보다 내부 아이템의 너비(높이) 합이 크면
    여러줄로 배치 */
    flex-wrap: wrap;
}

.box {
    background-color: lightpink;
    width: 100px;
    height: 200px;
    margin: 20px;
    /* 플렉스 아이템은 별도의 display 설정X */
    /* 외냐하면 부모가 display: flex라면 */
    /* 자동으로 플렉스 아이템이 된다. */
}

.big-box {
    background-color: lightgreen;
    /* width: 500px; */
    width: 100px;
    height: 100px;
}

/* 각 아이템의 교차 축 배치(정렬) 방식 */
/* align-self는 align-items 보다 우선순위가 높다. */
.align-self-center {
    align-self: center;
}
.align-self-end {
    align-self: flex-end;
}

/* 기본 너비(높이) */
.basis-200 {
    /* 아이템의 기본 크기 */
    flex-basis: 200px;
}

/* 컨테이너의 빈공간을 차지히는 비율 */
.flex-grow-1 {
    flex-grow: 1;
}
.flex-grow-2 {
    flex-grow: 2;
}
/* 컨테이너의 공간이 부족할 때 */
/* 아이템의 크기를 축소하는 비율 */
.flex-shrink-0 {
    flex-shrink: 0;
}